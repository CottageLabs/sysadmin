## command using IP address -
# ansible-playbook -i 192.168.1.100, server_initial_setup.yml --e "git_branch=feature/form_experiment ansible_user=cloo aws_profile=doaj-test-upload aws_access_key=key aws_secret_key=key  aws_scret_id=doaj/test-credentials" --private-key=~/.ssh/id_rsa -vv
## command using a specific host or group from your inventory.
# ansible-playbook -i doaj-hosts.ini server_initial_setup.yml --limit "hostname_or_ip" -e "git_branch=feature/new-feature"

---
- name: Setup VM for DOAJ application
  hosts: doaj-editor-1 #all:!index
  gather_facts: yes
  vars:
    git_branch: "develop" # or "master" or provide at runtime with -e git_branch=...
    repo_url: "https://github.com/DOAJ/doaj.git"
    venv_path: "/home/{{ ansible_user }}/doaj/venv"
    destination: "/home/{{ ansible_user }}/doaj"
    deploy_env: test # or production
    aws_profile: "my_profile"
    aws_access_key: "your_access_key"
    aws_secret_key: "your_secret_key"
    aws_region: "eu-west-2"
    aws_secret_id: "test-credentials"
    supervisor_tasks:
        - doaj
        - huey-long-running
        - huey-main
        - huey-events
        - huey-scheduled-long
        - huey-scheduled-short
  tasks:
    - name: Debug all available facts
      debug:
        var: ansible_facts

    - name: Summarise actions
      debug:
        msg: "Deploying branch {{ git_branch }} on host {{ inventory_hostname }}"

    - name: Ensure Python3, supervisor, and Git are installed
      apt:
        name:
          - python3
          - python3-venv
          - git
          - supervisor
        state: present
        update_cache: yes
      become: yes

    - name: Clone git repository
      git:
        repo: "{{ repo_url }}"
        dest: "{{ destination }}"
        version: "{{ git_branch }}"
        depth: 1
        force: yes
      register: git_result

    - name: Debug git clone result
      debug:
        var: git_result

    - name: Create a virtualenv with an up-to-date pip & awscli
      ansible.builtin.pip:
        name:
        - pip
        - awscli
        virtualenv: "{{ venv_path }}"
        state: latest

    - name: Ensure ~/.aws directory exists
      file:
        path: "/home/{{ ansible_user }}/.aws"
        state: directory
        mode: '0700'

    - name: Ensure ~/.appdata directory exists
      file:
        path: "/home/{{ ansible_user }}/appdata/doaj"
        state: directory
        mode: '0700'

    - name: Check if nginx file exists in logrotate
      stat:
        path: /etc/logrotate.d/nginx
      register: nginx_file

    - name: Disable nginx in logrotate
      become: true
      command: mv /etc/logrotate.d/nginx /etc/logrotate.d/nginx.disabled
      when: nginx_file.stat.exists

    - name: Copy logrotate config files
      become: true
      command: cp {{ destination }}/deploy/logrotate/{{ item }} /etc/logrotate.d/{{ item }}
      loop:
        - doaj-analytics
        - doaj-nginx

    - name: Write AWS credentials file
      copy:
        dest: "/home/{{ ansible_user }}/.aws/credentials"
        content: |
          [{{aws_profile}}]
          aws_access_key_id = {{ aws_access_key }}
          aws_secret_access_key = {{ aws_secret_key }}
        owner: "{{ ansible_user }}"
        mode: '0600'

    - name: Write AWS config file
      copy:
        dest: "/home/{{ ansible_user }}/.aws/config"
        content: |
          [profile {{aws_profile}}]
          output = text
          region = {{ aws_region }}
        owner: "{{ ansible_user }}"
        mode: '0600'

    - name: Create symlinks for supervisor
      ansible.builtin.file:
        src: "{{ destination }}/deploy/supervisor/{{ deploy_env }}/{{ item + '.conf'}}"
        dest: /etc/supervisor/conf.d/{{ item + '.conf' }}
        state: link
      loop: "{{ supervisor_tasks }}"
      become: yes

    - name: Ensure supervisor knows about our tasks
      community.general.supervisorctl:
        name: "{{ item }}"
        state: present
      loop: "{{ supervisor_tasks }}"
      become: yes

    - name: Call the install script deploy.sh to install the app
      shell: "{{ destination }}/deploy/deploy.sh {{ deploy_env }}"
      